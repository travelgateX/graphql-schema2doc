{"default":"","enums":"{\r\n  \"title\": \"Enums\",\r\n  \"pagetitle\": null,\r\n  \"description\": \"\",\r\n  \"weight\": 6,\r\n  \"icon\": null,\r\n  \"alwaysopen\": false\r\n}\r\nEnums are a particular type of `Scalar` that works like a drop-down, single selection menu. Each type of `Enum` has a number of choices defined, and users must select one of the choices when querying the `Enum`.\r\n\r\nFor example, you could make a `Query` asking for only hotels with a particular penalty cancellation policy (`enum CancelPentaltyType`). You then choose whether to see hotels with either a ‘nights’, ‘percent’ or ‘import’ penalty type.\r\n\r\nEach `Enum` is described in the same way:\r\n- A short definition of the `Enum`\r\n- An interactive GraphQL schema definition which shows the full list of possible options for the `Enum`\r\n- A list of which objects require this `Enum` to be used\r\n- Where possible, we are adding examples of how to use this object in your queries.\r\n\r\n{{% alert theme=\"info\" %}}You can update any page of our documentation by clicking on ‘Edit page’ and sending a pull request or by making a comment on the page. Our average turnaround for responding to pull requests or comments is less than 24 hours.{% /alert %}}\r\n","interfaces":"{\r\n  \"title\": \"Interfaces\",\r\n  \"pagetitle\": null,\r\n  \"description\": \"\",\r\n  \"weight\": 4,\r\n  \"icon\": null,\r\n  \"alwaysopen\": false\r\n}\r\nInterfaces are an abstract type that includes a certain set of fields that are grouped together. For example, our `AdviseMessage` interface requires the error code, error type and error description fields to be used together.\r\n\r\nEach `Interface` is described in the same way:\r\n- A short definition of the `Interface`\r\n- An interactive GraphQL schema definition\r\n- A list of all of the fields that are included in this `Interface` (remember, in GraphQL, ‘!’ indicates mandatory fields. Some interfaces have all fields mandatory and some have a mix of mandatory and optional fields)\r\n- Where possible, we are adding examples of how to use this object in your queries.\r\n\r\n{{% alert theme=\"info\" %}}You can update any page of our documentation by clicking on ‘Edit page’ and sending a pull request or by making a comment on the page. Our average turnaround for responding to pull requests or comments is less than 24 hours.{% /alert %}}\r\n","objects":"{\r\n  \"title\": \"Objects\",\r\n  \"pagetitle\": null,\r\n  \"description\": \"\",\r\n  \"weight\": 2,\r\n  \"icon\": null,\r\n  \"alwaysopen\": false\r\n}\r\nOur `Object` pages describe every single resource, and field in our schema.\r\n\r\nYou can access our `Schema` interactively in our [API Playground](https://api.travelgatex.com), but if you would like to understand each object’s properties, have a look at the relevant page here.\r\n\r\nEach object is described in the same way:\r\n- A short definition of the `Object`\r\n- An interactive GraphQL schema definition\r\n- A full list of all `Fields` in the object\r\n- A list of which other objects require this `Object`\r\n- Where possible, we are adding examples of how to use this `Object` in your queries.\r\n\r\n{{% alert theme=\"info\" %}}You can update any page of our documentation by clicking on ‘Edit page’ and sending a pull request or by making a comment on the page. Our average turnaround for responding to pull requests or comments is less than 24 hours.{% /alert %}}\r\n","reference":"","scalars":"{\r\n  \"title\": \"Scalars\",\r\n  \"pagetitle\": null,\r\n  \"description\": \"\",\r\n  \"weight\": 3,\r\n  \"icon\": null,\r\n  \"alwaysopen\": false\r\n}\r\nScalars are _types_ of objects that are available in our schema (such as `String` or `Integer`). By defining scalars we make sure you can only enter or receive data that fits the objects in our data model.\r\n\r\nEach `Scalar` is described in the same way:\r\n- A short definition of the `Scalar`\r\n- An interactive GraphQL schema definition\r\n- A list of which objects require this `Scalar`\r\n- Where possible, we are adding examples of how to use this object in your queries.\r\n\r\n{{% alert theme=\"info\" %}}You can update any page of our documentation by clicking on ‘Edit page’ and sending a pull request or by making a comment on the page. Our average turnaround for responding to pull requests or comments is less than 24 hours.{% /alert %}}\r\n","schema":"{\r\n  \"title\": \"Schema\",\r\n  \"pagetitle\": null,\r\n  \"description\": \"\",\r\n  \"weight\": 1,\r\n  \"icon\": null,\r\n  \"alwaysopen\": false\r\n}\r\nThe TravelgateX GraphQL API Schema is a powerful way to access all of our functionalities as you need them. GraphQL allows you to ask for the exact information you need, so that you get responses that can be used in your clients (applications, websites and other interfaces) directly, without having to parse information from long-winded or cluttered API responses.\r\n\r\n{{% alert theme=\"info\" %}}You can also see our ‘schema’ in action by using our <a href=\"https://docs.travelgatex.com/getting-started/playground/\">API playground</a>. You can create sample queries and the schema will autocomplete with available fields.{{% /alert %}}\r\n\r\n{{% alert theme=\"info\" %}}Check out our <a href=\"https://docs.travelgatex.com/hotelx/quickstart/\">sample query guides</a> to walk through some common queries to see how you can pick and choose from our `Schema` to get just the information you need.{{% /alert %}}\r\n\r\nThe `Schema` enables two main operations:\r\n- **Queries**: Queries are “read only” and are used to get data from our system. For example, getting a list of available hotel vacancies for a particular date and location is a `Query`\r\n- **Mutations**: Mutations change, add or delete the data in our system. For example, making a booking for a vacant hotel room is a `Mutation`.\r\n\r\n{{% alert theme=\"info\" %}}In GraphQL, `!` indicates mandatory fields that must be included in your queries. For more information about GraphQL, check out our <a href=\"https://docs.travelgatex.com/learning-graphql/\">Learning GraphQL guides</a>.{{% /alert %}}\r\n","inputobjects":"{\r\n  \"title\": \"Input objects\",\r\n  \"pagetitle\": null,\r\n  \"description\": \"\",\r\n  \"weight\": 5,\r\n  \"icon\": null,\r\n  \"alwaysopen\": false\r\n}\r\n{{% wip %}}\r\n"}